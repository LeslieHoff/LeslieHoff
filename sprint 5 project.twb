<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='sprint5project_17455043516600' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Superstore)' inline='true' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.0yzgh3z1nbvozs15f86db1lutgls'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Leslie/Downloads/Superstore.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.0yzgh3z1nbvozs15f86db1lutgls' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0yzgh3z1nbvozs15f86db1lutgls' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
      </column>
      <column caption='Order Count' datatype='integer' name='[Calculation_395472343689764866]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Order ID])' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Leslie/AppData/Local/Temp/TableauTemp/#TableauTemp_1te3hmn13ura2710xr7mk06wpc61.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/20/2025 06:17:13 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Category]' value='[Extract].[Category]' />
            <map key='[City]' value='[Extract].[City]' />
            <map key='[Country/Region]' value='[Extract].[Country/Region]' />
            <map key='[Customer ID]' value='[Extract].[Customer ID]' />
            <map key='[Customer Name]' value='[Extract].[Customer Name]' />
            <map key='[Discount]' value='[Extract].[Discount]' />
            <map key='[Order Date]' value='[Extract].[Order Date]' />
            <map key='[Order ID (Returns)]' value='[Extract].[Order ID]' />
            <map key='[Order ID]' value='[Extract].[Order ID1]' />
            <map key='[Postal Code]' value='[Extract].[Postal Code]' />
            <map key='[Product ID]' value='[Extract].[Product ID]' />
            <map key='[Product Name]' value='[Extract].[Product Name]' />
            <map key='[Profit]' value='[Extract].[Profit]' />
            <map key='[Quantity]' value='[Extract].[Quantity]' />
            <map key='[Region]' value='[Extract].[Region]' />
            <map key='[Returned]' value='[Extract].[Returned]' />
            <map key='[Row ID]' value='[Extract].[Row ID]' />
            <map key='[Sales]' value='[Extract].[Sales]' />
            <map key='[Segment]' value='[Extract].[Segment]' />
            <map key='[Ship Date]' value='[Extract].[Ship Date]' />
            <map key='[Ship Mode]' value='[Extract].[Ship Mode]' />
            <map key='[State]' value='[Extract].[State]' />
            <map key='[Sub-Category]' value='[Extract].[Sub-Category]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5142</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID1</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1427</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1505</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>583</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>54</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>722</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3405</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4110</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Returned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Returned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Returned</remote-alias>
              <ordinal>21</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID (Returns)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>22</ordinal>
              <family>Returns</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>279</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Orders_15C1F3E9F22C4DA08B26C6F7D643D802]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#00ff00'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Sales:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#66b3c2'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Sales:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#aa0000'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Sales:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Office Supplies&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Technology&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Furniture&quot;</bucket>
                <bucket>&quot;[federated.15a2zfj05r4bx71dtn5tt0dmzat6]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country/Region' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Returned' />
        <field-sort-custom-order field='Calculation_395472343681712128' />
        <field-sort-custom-order field='Order ID (Returns)' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_15C1F3E9F22C4DA08B26C6F7D643D802'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[Orders].[Order ID]' />
                    <expression op='[Returns].[Order ID]' />
                  </expression>
                </clause>
                <relation connection='excel-direct.0yzgh3z1nbvozs15f86db1lutgls' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country/Region' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0yzgh3z1nbvozs15f86db1lutgls' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Correlation between Sales and Returns'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[sum:Sales:qk]</rows>
        <cols>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[cnt:Returned:qk]</cols>
      </table>
      <simple-id uuid='{C02C880B-1B98-4DDA-A24D-F9BB6B177E4A}' />
    </worksheet>
    <worksheet name='Return Rate by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Category:nk]' />
              <text column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Category:nk]</rows>
        <cols>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</cols>
      </table>
      <simple-id uuid='{1B6BF7EB-5E0B-472F-AFCB-AB37C5FD7260}' />
    </worksheet>
    <worksheet name='Return Rate by Customer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column caption='Order Count' datatype='integer' name='[Calculation_395472343689764866]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([Order ID])' />
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_395472343689764866]' derivation='User' name='[usr:Calculation_395472343689764866:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[usr:Calculation_395472343689764866:qk]' included-values='in-range'>
            <min>2</min>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[usr:Calculation_395472343689764866:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Customer Name:nk]</rows>
        <cols>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</cols>
      </table>
      <simple-id uuid='{484EF6DC-FE17-47A3-AE33-4C1923BFD6E8}' />
    </worksheet>
    <worksheet name='Return Rate by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</rows>
        <cols>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{3DB04DAE-ABA3-4838-AD52-4F3351A182E1}' />
    </worksheet>
    <worksheet name='Return Rate by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]' />
              <lod column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' />
              <geometry column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[Latitude (generated)]</rows>
        <cols>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{ABDBD278-2718-4AEE-B50B-13246DA43276}' />
    </worksheet>
    <worksheet name='Return Rates by State and Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]'>
            <groupfilter function='level-members' level='[mn:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;District of Columbia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]</column>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</rows>
        <cols>([federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk] / [federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{8B35486A-C1EC-4756-B37E-1F26241CACAA}' />
    </worksheet>
    <worksheet name='Return Rates by Sub-Category and Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Avg' name='[avg:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:Order Date:ok]' member='1' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='2' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='3' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='4' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='5' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='6' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='7' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='8' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='9' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='10' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='11' />
              <groupfilter function='member' level='[mn:Order Date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]</column>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</rows>
        <cols>([federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk] / [federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok])</cols>
      </table>
      <simple-id uuid='{7C547AA9-DD09-476E-BB3F-8070964DD0B5}' />
    </worksheet>
    <worksheet name='Sum of returns by month and region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
          </datasources>
          <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
            <column caption='Return Indicator' datatype='integer' name='[Calculation_395472343683018753]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL([Returned]) THEN 0&#13;&#10;   ELSEIF [Returned] = &apos;Yes&apos; THEN 1&#13;&#10;   END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_395472343683018753]' derivation='Sum' name='[sum:Calculation_395472343683018753:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[sum:Calculation_395472343683018753:qk]</rows>
        <cols>([federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok] / [federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{5376ECE3-B063-4DBF-B401-3B9F84F10A0D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Return Rates for Superstore'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Orders+ (Superstore)' name='federated.15a2zfj05r4bx71dtn5tt0dmzat6' />
      </datasources>
      <datasource-dependencies datasource='federated.15a2zfj05r4bx71dtn5tt0dmzat6'>
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='20' param='vert' type-v2='layout-flow' w='87774' x='586' y='1042'>
            <zone h='6511' id='22' type-v2='title' w='87774' x='586' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91405' id='17' param='vert' type-v2='layout-flow' w='87774' x='586' y='7553'>
              <zone h='91405' id='15' type-v2='layout-basic' w='87774' x='586' y='7553'>
                <zone h='33307' id='3' param='horz' type-v2='layout-flow' w='21841' x='586' y='65651'>
                  <zone h='33307' id='6' param='vert' type-v2='layout-flow' w='21841' x='586' y='65651'>
                    <zone h='33307' id='18' type-v2='layout-basic' w='21841' x='586' y='65651'>
                      <zone h='33307' id='21' type-v2='layout-basic' w='21841' x='586' y='65651'>
                        <zone h='33307' id='28' name='Return Rate by Month' w='21841' x='586' y='65651'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                  </zone>
                </zone>
                <zone h='32938' id='7' param='horz' type-v2='layout-flow' w='43684' x='586' y='7553'>
                  <zone forceUpdate='true' h='32938' id='23' type-v2='text' w='43684' x='586' y='7553'>
                    <formatted-text>
                      <run bold='true'>Explanation of Visuals</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rate by Category(Below)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rate by Month (Bottom Left)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rate by State (Bottom Map)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Correlation between Sales and Returns(top right)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rate by Customer (Middle RIght)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rates by Sub-Category and Month(Bottom 2nd from right)</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Return Rates by State and Month(Bottom Right)</run>
                      <run>Æ&#10;&#10;</run>
                      <run fontcolor='#000000'>Filter for return rate by customer to see only customers with orders greater than 1</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Hover over Map to see different return rates per state.</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Filter for return rate by sub-category and month was sub-category</run>
                      <run>Æ&#10;</run>
                      <run fontcolor='#000000'>Filter for return rate by state and month was state.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='30467' id='8' param='horz' type-v2='layout-flow' w='44090' x='44270' y='7553'>
                  <zone h='30467' id='26' name='Correlation between Sales and Returns' w='44090' x='44270' y='7553'>
                    <layout-cache minwidth='178' type-h='fixed' type-w='scalable' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='25160' id='10' param='horz' type-v2='layout-flow' w='43684' x='586' y='40491'>
                  <zone h='25160' id='12' param='horz' type-v2='layout-flow' w='43684' x='586' y='40491'>
                    <zone h='25160' id='24' name='Return Rate by Category' w='43684' x='586' y='40491'>
                      <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='33307' id='14' param='vert' type-v2='layout-flow' w='21843' x='22427' y='65651'>
                  <zone h='33307' id='30' name='Return Rate by State' w='21843' x='22427' y='65651'>
                    <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='30470' id='35' param='vert' type-v2='layout-flow' w='22045' x='66315' y='68488'>
                  <zone h='30470' id='44' name='Return Rates by State and Month' w='22045' x='66315' y='68488'>
                    <layout-cache minheight='261' type-h='scalable' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='30470' id='39' param='horz' type-v2='layout-flow' w='22045' x='44270' y='68488'>
                  <zone h='30470' id='42' name='Return Rates by Sub-Category and Month' w='22045' x='44270' y='68488'>
                    <layout-cache cell-count-w='203' minheight='287' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone h='30468' id='40' param='vert' type-v2='layout-flow' w='44090' x='44270' y='38020'>
                  <zone h='30468' id='41' name='Return Rate by Customer' w='44090' x='44270' y='38020'>
                    <layout-cache cell-count-h='788' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='97916' id='37' param='vert' type-v2='layout-flow' w='11054' x='88360' y='1042'>
            <zone h='7943' id='45' mode='checkdropdown' name='Return Rates by State and Month' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' type-v2='filter' w='11054' x='88360' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7943' id='46' param='vert' type-v2='layout-flow' w='11054' x='88360' y='8985'>
              <zone h='7943' id='43' mode='checkdropdown' name='Return Rates by Sub-Category and Month' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]' type-v2='filter' w='11054' x='88360' y='8985'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='55' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone h='6511' id='22' type-v2='title' w='87774' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='32938' id='23' type-v2='text' w='43684' x='586' y='7553'>
                  <formatted-text>
                    <run bold='true'>Explanation of Visuals</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rate by Category(Below)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rate by Month (Bottom Left)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rate by State (Bottom Map)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Correlation between Sales and Returns(top right)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rate by Customer (Middle RIght)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rates by Sub-Category and Month(Bottom 2nd from right)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Return Rates by State and Month(Bottom Right)</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#000000'>Filter for return rate by customer to see only customers with orders greater than 1</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Hover over Map to see different return rates per state.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Filter for return rate by sub-category and month was sub-category</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000'>Filter for return rate by state and month was state.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='30467' id='26' is-fixed='true' name='Correlation between Sales and Returns' w='44090' x='44270' y='7553'>
                  <layout-cache minwidth='178' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='30468' id='41' is-fixed='true' name='Return Rate by Customer' w='44090' x='44270' y='38020'>
                  <layout-cache cell-count-h='788' non-cell-size-h='133' type-h='cell' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='185' h='25160' id='24' is-fixed='true' name='Return Rate by Category' w='43684' x='586' y='40491'>
                  <layout-cache minwidth='220' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='33307' id='28' is-fixed='true' name='Return Rate by Month' w='21841' x='586' y='65651'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='33307' id='30' is-fixed='true' name='Return Rate by State' w='21843' x='22427' y='65651'>
                  <layout-cache minheight='251' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='43' mode='checkdropdown' name='Return Rates by Sub-Category and Month' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]' type-v2='filter' w='11054' x='88360' y='8985'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='30470' id='42' is-fixed='true' name='Return Rates by Sub-Category and Month' w='22045' x='44270' y='68488'>
                  <layout-cache cell-count-w='203' minheight='287' non-cell-size-w='66' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7943' id='45' mode='checkdropdown' name='Return Rates by State and Month' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' type-v2='filter' w='11054' x='88360' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='30470' id='44' is-fixed='true' name='Return Rates by State and Month' w='22045' x='66315' y='68488'>
                  <layout-cache minheight='261' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15685C23-8E03-4B1A-B424-29BE60A4A2A1}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Superstore Return Rates</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-description'>
          <format attr='font-style' id='story-description_17' value='normal' />
          <format attr='font-weight' id='story-description_17' value='normal' />
          <format attr='text-decoration' id='story-description_17' value='none' />
          <format attr='font-style' id='story-description_18' value='normal' />
          <format attr='font-weight' id='story-description_18' value='normal' />
          <format attr='text-decoration' id='story-description_18' value='none' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='4357' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='5187' />
            <zone h='83506' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='15664'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Understanding Returns: An Overview' captured-sheet='' id='4' />
                  <story-point caption='Return Rates by Category' captured-sheet='Return Rate by Category' id='1' />
                  <story-point caption='Return Rates by Month' captured-sheet='Return Rate by Month' id='3'>
                    <capturedDeltas>
                      <worksheet name='Return Rate by Month'>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='0' text-width='235'>
                            <formatted-text>
                              <run fontcolor='#757575'>August has the highest average return rate at </run>
                              <run bold='true'><![CDATA[<[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]>]]></run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='axis'>
                                <x-coord cell-offset='0.35'>
                                  <node-reference>
                                    <fields>
                                      <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</field>
                                    </fields>
                                    <multibucket>
                                      <bucket>8</bucket>
                                    </multibucket>
                                  </node-reference>
                                </x-coord>
                                <y-coord axis-value='0.35388104838709672'>
                                  <node-reference>
                                    <axis>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</axis>
                                  </node-reference>
                                </y-coord>
                                <page-reference />
                              </visual-coordinate>
                            </point>
                            <body x='161' y='-38' />
                          </annotation>
                        </annotations>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Return Rates by State' captured-sheet='Return Rate by State' id='5'>
                    <capturedDeltas>
                      <worksheet name='Return Rate by State'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[Latitude (generated)]' field-type='quantitative' max='8400411.5218259469' min='1705726.2425533258' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[Longitude (generated)]' field-type='quantitative' max='-7042086.6557569997' min='-14034124.554210762' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Correlation between sales and returns' captured-sheet='Correlation between Sales and Returns' id='6' />
                  <story-point caption='Return Rate by Customer' captured-sheet='Return Rate by Customer' id='7' />
                  <story-point caption='Return Rate by Sub-Category and Month' captured-sheet='Return Rates by Sub-Category and Month' id='8'>
                    <capturedDeltas>
                      <worksheet name='Return Rates by Sub-Category and Month'>
                        <filter class='categorical' column='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]'>
                          <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Return Rate by State and Month' captured-sheet='Return Rates by State and Month' id='9' />
                  <story-point caption='Sum of Returns by Region' captured-sheet='Sum of returns by month and region' id='10' />
                  <story-point caption='Conclusion: Next Steps' captured-sheet='' id='11' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='9232' id='6' story-point-id='1' type-v2='text' w='30315' x='66732' y='30809'>
          <formatted-text>
            <run bold='true' fontalignment='0' fontsize='10'>Technology is the category with the highest average return rate at 0.27</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='55083' hidden='true' id='7' story-point-id='4' type-v2='text' w='92815' x='787' y='15664'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>The Superstore wants to understand and reduce return rates throughout their company.  We did this by measuring the percentage of orders that are returned by the total orders placed.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>We compared returns across different metrics such as category, sub-category, state, customers, and month to identify trends or spikes in return activity.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>Each measure offers different insights.  When you want to understand the volume of returns, know the high return products, or track the effectiveness of return reduction strategies over time,  it is best to use the total number of returns.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>The total cost of returns involves the monetary cost associated with processing returns including restocking fees, shipping, and handling costs.  We use this measure for our financial impact analysis, which helps decision makers understand the cost implications of returns and prioritize cost reduction strategies.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'>In the findings, we did not see a correlation with high sales and return rates.  Meaning the products that have high total sales do not always have high returns.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'> Technology has the highest average return rate of the categories. Which correlates to the sub-categories machines and copiers, which are tied for the highest average returns.  This tells me that there may be some issues with the performance of the technology or possible damage with shipping long distances.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='11'> The region with the most returns is the west, with Utah having the highest average return rate by state.  The west region has the highest return rates in december and september.  This tells me that Christmas/Hanukkah and the back to school season seem to have an impact with high returns!  </run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='11929' id='8' story-point-id='1' type-v2='text' w='33268' x='13386' y='49274'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='12'>Quickly identify which categories have higher or lower return rates, guiding targeted product quality reviews or marketing strategies</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='9959' hidden='true' id='9' story-point-id='3' type-v2='text' w='33268' x='12402' y='19398'>
          <formatted-text>
            <run>Hover over each month to see the average return rate</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='14315' hidden='true' id='10' story-point-id='5' type-v2='text' w='33268' x='3150' y='19087'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='12'>Shows a color coded map that represents return rates by state. Pinpoints areas with potential logistical or regional issues impacting returns, allowing regional policy adjustments.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='12656' hidden='true' id='11' story-point-id='6' type-v2='text' w='36220' x='42421' y='30290'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='gg sans' fontsize='10'>Allows comparison between return rates and sales performance, identifying if high sales correlate with high returns or if specific products need attention.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='15975' hidden='true' id='12' story-point-id='7' type-v2='text' w='22638' x='73327' y='41183'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='10'>Focuses on customer demographics or behavior patterns that contribute to return rates</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='15249' hidden='true' id='13' story-point-id='8' type-v2='text' w='34449' x='12205' y='22822'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='10'>Enables a granular analysis to find specific products with return issues, guiding product development or quality enhancement.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='7469' hidden='true' id='14' story-point-id='9' type-v2='text' w='33268' x='38287' y='29668'>
          <formatted-text>
            <run fontalignment='0' fontsize='10'>Identifies seasonal variations or spikes around promotional events, aiding in planning and resource allocation.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' h='11515' hidden='true' id='15' story-point-id='10' type-v2='text' w='32874' x='19882' y='24378'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Arial' fontsize='10'>High returns in a region might highlight the need for better logistical processes.</run>
          </formatted-text>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='60581' hidden='true' id='16' story-point-id='11' type-v2='text' w='88878' x='3445' y='15249'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>In the findings, we did not see a correlation with high sales and return rates.  Meaning the products that have high total sales do not always have high returns. This can help in guiding targeted product quality reviews or marketing strategies for those with high returns.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>Technology has the highest average return rate of the categories. In the sub-categories, machines and copiers, are tied for the highest average returns.  This tells me that there may be some issues with the performance of the technology or possible damage with shipping long distances. </run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>Utah has the highest average return rate per state.  The region with the most returns is the west, which has the highest return rates in december and september.  Telling me that back to school and Christmas/Hanukkah time are affecting the return rates.</run>
            <run fontalignment='0'>Æ&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>The dashboard provides ongoing insights and can influence broader strategic decisions and lead to continuous improvement. </run>
            <run fontalignment='0'>Æ&#10;&#10;</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10'>Utilizing this dashboard  will help with discovering areas of improvement in:</run>
            <run fontalignment='0' lmargin='240'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'>Customer Engagement</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'>: Recommend tailored communication or service initiatives to improve customer satisfaction and reduce returns.</run>
            <run fontalignment='0' lmargin='240'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'>Operational Adjustments</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'>: Propose logistical or policy changes if geographical patterns show significant return discrepancies.</run>
            <run fontalignment='0' lmargin='240'>Æ&#10;</run>
            <run bold='true' fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'>Quality Improvements:</run>
            <run fontalignment='0' fontcolor='#000000' fontsize='10' lmargin='240'> help tailor product improvements</run>
            <run fontalignment='0' lmargin='240'>Æ&#10;</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{240568DA-A0B8-4E80-BDD6-88414BF7AEB4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Correlation between Sales and Returns'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Returned:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FDD4132F-15EA-4419-840C-A31E0F7BD3C0}' />
    </window>
    <window class='worksheet' name='Return Rate by Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Category:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FDAAA4C-4FFC-4F76-A9E6-7FD823C40F91}' />
    </window>
    <window class='worksheet' name='Return Rate by Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34A16525-250C-4BE9-AB81-F2E3B82DF03D}' />
    </window>
    <window class='worksheet' name='Return Rate by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[avg:Calculation_395472343683018753:qk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:City:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{74C0A06D-60CA-4DAB-8752-21DBC80C6819}' />
    </window>
    <window class='worksheet' name='Return Rate by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27BF08C2-599A-40A2-B82C-BF7ABC4A6878}' />
    </window>
    <window class='worksheet' name='Return Rates by Sub-Category and Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Returned:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED116D78-334E-4861-B5D5-279B8B51C8C0}' />
    </window>
    <window class='worksheet' name='Return Rates by State and Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]' type='filter' />
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[mn:Order Date:ok]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:State:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{516CB312-BC2B-4E31-93EB-6525D8FEE6D1}' />
    </window>
    <window class='dashboard' maximized='true' name='Return Rates for Superstore'>
      <viewpoints>
        <viewpoint name='Correlation between Sales and Returns'>
          <zoom type='entire-view' />
          <highlight field='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Return Rate by Category'>
          <zoom type='entire-view' />
          <highlight field='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Category:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Return Rate by Customer'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rate by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rates by State and Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Return Rates by Sub-Category and Month'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{87073C8E-F22B-4AE5-973E-2918FE49AC5B}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F701412F-20E2-4B46-8A0B-FF7F251CFCC8}' />
    </window>
    <window class='worksheet' name='Sum of returns by month and region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Region:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[none:Sub-Category:nk]</field>
            <field>[federated.15a2zfj05r4bx71dtn5tt0dmzat6].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E40AEBEF-CCC2-4863-97E3-0435E67A758A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Correlation between Sales and Returns' width='192'>
      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
    </thumbnail>
    <thumbnail height='147' name='Return Rate by Category' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate by Customer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rate by State' width='192'>
      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
      4H8DYawSZGU4nr8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Return Rates by State and Month' width='192'>
      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
      AIeO5v8DgzUVbTZToKEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Return Rates by Sub-Category and Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Return Rates for Superstore' width='192'>
      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
      4VGkZiiA5T4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sum of returns by month and region' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
